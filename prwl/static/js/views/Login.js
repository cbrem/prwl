// Generated by CoffeeScript 1.9.1
(function() {
  "TODO:\n* wire this up to other things\n* before login, try to check if a user exists\n	* if user exists, just log in or fail based on password\n	* otherwise, create\n* set prwl.user";
  var BACKSPACE, NEWLINE,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  NEWLINE = 13;

  BACKSPACE = 8;

  prwl.views.Login = (function(superClass) {
    extend(Login, superClass);

    function Login() {
      return Login.__super__.constructor.apply(this, arguments);
    }

    Login.prototype.events = {
      'keyup #login-password': 'checkCodes'
    };

    Login.prototype.checkCodes = function(e) {
      if (e.which === NEWLINE && this.validate()) {
        return this.submit();
      }
    };

    Login.prototype.validate = function() {
      return $('#login-username').val().trim() && $('#login-password').val().trim();
    };

    Login.prototype.submit = function() {
      var password, template, user, username;
      username = $('#login-username').val().trim();
      password = $('#login-password').val().trim();
      user = new prwl.models.User({
        username: username,
        password: password
      });
      user.fetch({
        success: function() {
          return user.login({
            success: function() {
              prwl.user = user;
              return prwl.router.navigate('home', true);
            },
            failure: function() {
              return alert('Wrong password!');
            }
          });
        },
        failure: function() {
          if (confirm('No user with this name. Create one?')) {
            user.save();
            prwl.user = user;
            return prwl.router.navigate('home', true);
          }
        }
      });
      $('#login-username').val('');
      $('#login-password').val('');
      ({
        initialize: function() {
          return this;
        },
        render: function() {}
      });
      template = $('#login-template').html();
      this.$el.html(_.template(template));
      return this;
    };

    return Login;

  })(Backbone.View);

}).call(this);
